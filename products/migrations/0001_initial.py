# Generated by Django 3.0.2 on 2020-03-04 04:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('current_amount', models.FloatField(default=0, help_text='Amount in milliliters')),
            ],
        ),
        migrations.CreateModel(
            name='SubProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('current_amount', models.FloatField(default=0, help_text='Amount in milliliters')),
                ('price', models.FloatField(help_text='Price of a milliliter of the product')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity in milliliters')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
                ('subproduct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.SubProduct')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='components',
            field=models.ManyToManyField(blank=True, through='products.ProductComposition', to='products.SubProduct'),
        ),
        migrations.AddField(
            model_name='product',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PackagingObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('current_amount', models.IntegerField()),
                ('price', models.FloatField()),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('size', models.FloatField(help_text='Size in liters')),
                ('price', models.FloatField(help_text='Selling price')),
                ('packaging_objects', models.ManyToManyField(blank=True, to='products.PackagingObject')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measures', to='products.Product')),
            ],
        ),
        migrations.AddConstraint(
            model_name='subproduct',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_subproduct_for_user'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_product_for_user'),
        ),
        migrations.AddConstraint(
            model_name='packagingobject',
            constraint=models.UniqueConstraint(fields=('owner', 'name'), name='unique_packaging_for_user'),
        ),
        migrations.AddConstraint(
            model_name='measure',
            constraint=models.UniqueConstraint(fields=('product', 'size'), name='unique_size_for_product'),
        ),
    ]
